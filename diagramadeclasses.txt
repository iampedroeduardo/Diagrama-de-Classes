@startuml

scale 1.00
skinparam ClassBackgroundColor White
skinparam ClassBorderColor Black
skinparam ClassAttributeIconSize 0
skinparam NoteBackgroundColor White
skinparam NoteBorderColor Black
skinparam ArrowColor Black
skinparam Shadowing false
hide Circle

class Aluno {
  - matricula: String
  - nome: String
  - CPF: String
  - genero: char
  - nascimento: Date
  - entrada: Date
  - filiacao: String
  - CEP: String
  - telefone: String
  + Aluno(matricula: String, CPF: String, nome: String)
  + getMatricula(): String
  + getCPF(): String
  + getNome(): String
  + getGenero(): char
  + getNascimento(): Date
  + getEntrada(): Date
  + getFiliacao(): String
  + getCEP(): String
  + getTelefone(): String
  + setNome(nome: String): String
  + setGenero(genero: char): char
  + setFiliacao(filiacao: String): String
  + setCEP(CEP: String): String
  + setTelefone(telefone: String): String
}

class AlunoDAO {
  + create(aluno: Aluno)
  + update(aluno: Aluno)
  + listAll(): Aluno[]
  + listByMatricula(matricula: String): Aluno
  + listByCPF(CPF: String): Aluno
  + listByNome(nome: String): Aluno[]
}

class PDO {
  - parameters: String
  + PDO(parameters: String)
  + exec(SQL: string)
  + query(SQL: String): Object[]
}

class Turma {
  - professor: Professor[]
  - aluno: AlunoNota[]
  - codigo: String
  - periodo: Periodo
  - disciplina: Disciplina
  - horarios: Horario[]
  - planoEnsino: File
  - topicosAula: TopicoAula[]
  + Turma(codigo: String, periodo: Periodo)
  + getCodigo(): String
  + getPeriodo(): Periodo
  + getAluno(): Aluno[]
  + getProfessor(): Professor[]
  + getHorarios(): Horario[]
  + getPlanoEnsino(): File
  + addAluno(aluno: Aluno)
  + removeAluno(aluno: Aluno)
  + addProfessor(professor: Professor)
  + removeProfessor(professor: Professor)
  + addHorario(horario: Horario)
  + removeHorario(horario: Horario)
  + removeTopicoAula(topicoAula: TopicoAula)
  + setPlanoEnsino(planoEnsino: File)r
}

class TurmaDAO {
  + create(turma: Turma)
  + update(turma: Turma)
  + listAll(): Turma[]
  + listByCodigo(codigo: String): Turma
  + listByPeriodo(periodo: Periodo): Turma[]
  + listByProfessor(professor: String): Turma[]
  + listByAluno(aluno: String): Turma[]
  + listByDisciplina(disciplina: String): Turma[]
}

class AlunoNota {
  - nota: Real[]
  - presenca: Boolean[]
  + getNotas(): Real[]
  + getPresencas(): Real[]
  + addNota(nota: Real)
  + addPresenca(presenca: Boolean)
  + removeNota(nota: Real)
  + removePresenca(presenca: Boolean)
}

class Professor {
  - matricula: String
  - nome: String
  - CPF: String
  - genero: char
  - nascimento: Date
  - CEP: String
  - telefone: String
  - entrada: Date
  + Professor(matricula: String, CPF: String, nome: String)
  + getMatricula(): String
  + getCPF(): String
  + getNome(): String
  + getGenero(): char
  + getNascimento(): Date
  + getEntrada(): Date
  + getCEP(): String
  + getTelefone(): String
  + setNome(nome: String): String
  + setGenero(genero: char): char
  + setCEP(CEP: String): String
  + setTelefone(telefone: String): String
}

class ProfessorDAO {
  + create(professor: Professor)
  + update(professor: Professor)
  + listAll(): Professor[]
  + listByCPF(CPF: String): Professor
  + listByNome(nome: String): Professor[]
}

class Periodo {
  - ano: integer
  - codigo: String
  + Periodo()
  + getAno(): integer
  }

class PeriodoSemestral{
  -semestre: integer
  +PeriodoSemestral(semestre:integer)
  +getSemestre(): integer
  }
class PeriodoDAO {
  + create(periodo: Periodo)
  + listAll(): Periodo[]
}

class Disciplina {
  - nome: String
  - cargaHoraria: integer
  - codigo: String
  + Disciplina(nome: String, cargaHoraria: integer)
  + getNome(): String
  + getCargaHoraria(): integer
  + setNome(nome: String): String
  + setCargaHoraria(cargaHoraria: integer): integer
}



class DisciplinaDAO {
  + create(disciplina: Disciplina)
  + update(disciplina: Disciplina)
  + listAll(): Disciplina[]
  + listByCodigo(codigo: String): Disciplina
  + listByNome(nome: String): Disciplina[]
}

class Curso{
  -nome: String
  -codigo: integer
  -disciplinas: Disciplina[]
  -coordenador: Professor
  -planoCurso: File
  -Tipo: String
  +Curso (nome: String, disciplinas: Disciplina[])
  +getNome(): String
  +getTipo(): String
  +getDisciplinas(): Disciplina[]
  +getCoordenador(): Professor
  +getPlanoCurso(): File
  +setNome(nome: String)
  +setTipo(tipo: String)
  +setCoordenador(coordenador: Professor)
  +setPlanoCurso(planoCurso: File)
  +addDisciplina(disciplina: Disciplina)
  +removeDisciplina(disciplina: Disciplina)
}

class CursoDAO {
  + create(curso: Curso)
  + update(curso: Curso)
  + listAll(): Curso[]
  + listByCodigo(codigo: String): Curso
  + listByNome(nome: String): Curso[]
  + listByDisciplina(disciplina: String): Curso[]
}

class Horario{
  - codigo: integer
  - dia: integer
  - inicio: Time
  - final: Time
  + Horario(dia:integer, inicio: Time, final: Time)
  + getDia(): integer
  + getInicio(): Time
  + getFinal(): Time
  + setDia(dia:integer)
  + setInicio(inicio:Time)
  + setFinal(final:Time)
}

class HorarioDAO{
  + create(horario: Horario)
  + update(horario: Horario)
  + listAll(): Horario[]
  + listByCodigo(codigo: String): Horario
  + listByDia(dia: integer): Horario[]
}

class TopicoAula{
  - codigo: integer
  - nome: String
  - descricao: String
  - inicio: Date
  - final: Date
  + TopicoAula(nome: String, descricao: String, inicio: Date, final: Date)
  + getNome(): String
  + getDescricao(): String
  + getInicio(): Date
  + getFinal(): Date
  + setNome(nome: String)
  + setDescricao(descricao: String)
  + setInicio(inicio: Date)
  + setFinal(final: Date)
}

class TopicoAulaDAO{
  + create(topicoAula: TopicoAula)
  + update(topicoAula: TopicoAula)
  + listAll(): TopicoAula[]
  + listByCodigo(codigo: String): TopicoAula
}

class Campus{
  - codigo: integer
  - nome: String
  - cursos: Curso[]
  + getNome(): String
  + setNome(nome: String)
  + addCurso(curso: Curso)
  + removeCurso(curso: Curso)
}

class CampusDAO{
  + create(campus: Campus)
  + update(campus: Campus)
  + listAll(): Campus[]
  + listByCodigo(codigo: String): Campus
  + listByNome(nome: String): Campus
  + listByCurso(curso: String): Campus[]
}

AlunoDAO -- Aluno
AlunoDAO -up- PDO
Turma o-left- AlunoNota
TurmaDAO -- Turma
TurmaDAO -up- PDO
AlunoNota -up-|> Aluno
Turma o- Professor
ProfessorDAO -- Professor
ProfessorDAO -up- PDO
PeriodoDAO -- Periodo
PeriodoSemestral -right-|> Periodo
Turma o-down- Periodo
PeriodoDAO -up- PDO
Turma o-down- Disciplina
DisciplinaDAO -- Disciplina
DisciplinaDAO -up- PDO
CursoDAO -- Curso
CursoDAO -up- PDO
Curso o-down- Disciplina
HorarioDAO -- Horario
HorarioDAO -up- PDO
Turma o-down- Horario
Curso o-down- Professor
TopicoAulaDAO -- TopicoAula
TopicoAulaDAO -- PDO
Turma o- TopicoAula
Campus o- Curso
Campus -- CampusDAO
CampusDAO -- PDO
@enduml
